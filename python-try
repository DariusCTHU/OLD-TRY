print('cnm')

100+200

命令行 cd 到储存.py文件的路径,python filename.py可以打开             D:\>cd\code
>>>是python的交互式环境，退出用ctrl+c

>>> print('100+200=',100+200)     
100+200= 300                         print出来的东西是没有‘’的

>>> name=input()                      input获得的是字符串！！！
Darius
>>> print('hello',name)
hello Darius
>>> name=input('please fuck yourself:')  提示
please fuck yourself:cnm
>>> print('hello',name)
hello cnm

>>> print('1024 * 768 =',1024*768)
1024 * 768 = 786432

字符\本身也要转义，所以\\表示的字符就是\
\n 转行  \t 制表符
用r''表示''内部的字符串默认不转义
>>> print(r'\\','fuck')
\\ fuck

>>> True or False
True
>>> True and False
False
>>> not True
False   布尔值

>>> print('s2 =',"'hello,'",r"\'Adam\''")
s2 = 'hello, \'Adam\''   里面有单引号，这里r外面就用双引号
>>> print('s2 =',"r'hello,",'\"Bart\"\'')
s2 = r'hello, "Bart"'

ASCII，127个，一字节有8个比特，Unicode，2个字节，UTF-8，可变长编码，英文字母：1字节，汉字：3字节
字符
字节 byte

格式化
>>> '%s, you are a %s!' %('ab','cd')
'ab, you are a cd!'
%s: 字符串   %d:整数  %f:浮点数   %x:16进制整数
>>> 'you are %d years old' %(18)
'you are 18 years old'  

s1 = 72
s2 = 85
r=(s2-s1)/s1*100;
print('raise percent is %.1f %%' % (r))    直接加百分号，一个内容括号可以省略；%.1表示保留一位小数

我王老五时隔一星期终于回来了

列表  list  都是[]方括号

>>> fruits=['apple','pen','pineapple']
>>> fruits
['apple', 'pen', 'pineapple']
>>> len(fruits)
3
fruits[2]
'pineapple'
0：第一个元素   -1：最后一个元素
注意list是可变的列表，可以：
添加：append
插入：insert（1，'aaa'）（在索引位置为1的地方插入）
删除：pop或者pop(i)
赋值：fruits[2]='aaa'


list里面可以是任何东西，也包括另一个list，此时调用最里面的元素采用s[1][2]，表示s里的1号位的列表的2号位的元素

另一种列表 tuple  是不可变的！安全的！
不可变的意思是里面指向的东西不可变，如果里面的元素是个list，list里面的东西是可以改变的

classmates = ('Michael', 'Bob', 'Tracy')   都是（）圆括号

if语句

birth = input('birth: ')
if birth < 2000:
    print('00前')
else:
    print('00后')

int(..)   float(..)

循环

for...in...(列表）    执行缩进块的语句！所以执行的要缩进！！
>>> a=[1,2,3]
>>> for b in a:  （记得冒号）
...     print(b)
...

range(n) 生成从0到n-1的数组，用list可以显示
>>> list(range(5))
[0, 1, 2, 3, 4]

L=['a','b','c']
n=0
while n<3:
    name=L[n]
    print('hello',name)
    n=n+1
    
这里的问题主要是对齐，以后一定不要乱空格，缩进要四个空格

break:结束循环
continue:跳过循环（直接进入下一个）   这两个都得加if...: ，判断某些循环是否跳过或直接结束

dict&set
键-值  key-value  这里key必须是不可变对象（如字符串），value可以是数值，字符串，etc  **字符串一定要加双引号
>>> d={'a':2,'b':1}
>>> d['a']
2     本质上是写了一个对应关系，通过输入key获得其对应的value。注意d用大括号，取值用中括号
删除
>>> d.pop('Bob')
75

set 无序不重复元素的集合，意义不明
>>> s = set([1, 1, 2, 2, 3, 3])
>>> s
{1, 2, 3}   将一个list赋给set

函数：

调用函数：abs(-1)，int('123')，bool(1)，str(123)
函数名 a=abs
a(-1)

def aaa(x):
	if x > 0:
		return x
	else:
		return -x

a=input('aa:',)
x=int(a)
print(aaa(x))    这里用4个空格就报错，用tab就没问题，感觉很奇怪
在Python中，定义一个函数要使用def语句，依次写出函数名、括号、括号中的参数和冒号:，然后，在缩进块中编写函数体，函数的返回值用return语句返回。
空函数：def(...):
           pass  （占位符）
如果要返回多个值：实际返回了一个tuple
import math 导入math包
import math
def quadratic(a,b,c):
	d=b**2-4*a*c
	if d >= 0:
		x1=(-b+math.sqrt(d))/(2*a)
		x2=(-b-math.sqrt(d))/(2*a)
		print('the answer is:',x1,x2)
	else:
		print('no')      不用return直接写出结果就完事了
           
